# Infrastructure Applications managed by ArgoCD

# Ingress Controller
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: ingress-nginx
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: infrastructure
spec:
  project: kailash
  
  source:
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.8.3
    chart: ingress-nginx
    helm:
      values: |
        controller:
          replicaCount: 3
          autoscaling:
            enabled: true
            minReplicas: 3
            maxReplicas: 10
          metrics:
            enabled: true
            serviceMonitor:
              enabled: true
              additionalLabels:
                prometheus: kailash
          config:
            use-forwarded-headers: "true"
            compute-full-forwarded-for: "true"
            use-proxy-protocol: "false"
            ssl-protocols: "TLSv1.2 TLSv1.3"
            ssl-ciphers: "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256"
          service:
            type: LoadBalancer
            annotations:
              service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
              service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
  
  destination:
    server: https://kubernetes.default.svc
    namespace: ingress-nginx
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
# Cert Manager
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cert-manager
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: infrastructure
spec:
  project: kailash
  
  source:
    repoURL: https://charts.jetstack.io
    targetRevision: v1.13.3
    chart: cert-manager
    helm:
      values: |
        installCRDs: true
        global:
          leaderElection:
            namespace: cert-manager
        prometheus:
          enabled: true
          servicemonitor:
            enabled: true
            labels:
              prometheus: kailash
        webhook:
          replicaCount: 3
        cainjector:
          replicaCount: 2
  
  destination:
    server: https://kubernetes.default.svc
    namespace: cert-manager
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
# External DNS
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: external-dns
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: infrastructure
spec:
  project: kailash
  
  source:
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 6.28.6
    chart: external-dns
    helm:
      values: |
        provider: aws
        aws:
          region: us-east-1
          zoneType: public
        domainFilters:
          - yourdomain.com
        policy: sync
        txtOwnerId: kailash
        rbac:
          create: true
        serviceAccount:
          create: true
          annotations:
            eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/external-dns
        metrics:
          enabled: true
          serviceMonitor:
            enabled: true
            labels:
              prometheus: kailash
  
  destination:
    server: https://kubernetes.default.svc
    namespace: external-dns
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
---
# Cluster Autoscaler
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: cluster-autoscaler
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: infrastructure
spec:
  project: kailash
  
  source:
    repoURL: https://kubernetes.github.io/autoscaler
    targetRevision: 9.34.1
    chart: cluster-autoscaler
    helm:
      values: |
        autoDiscovery:
          clusterName: kailash-prod
          enabled: true
        awsRegion: us-east-1
        rbac:
          create: true
          serviceAccount:
            create: true
            annotations:
              eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT:role/cluster-autoscaler
        extraArgs:
          skip-nodes-with-local-storage: false
          expander: least-waste
          balance-similar-node-groups: true
          skip-nodes-with-system-pods: false
  
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
---
# Metrics Server
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: metrics-server
  namespace: argocd
  labels:
    app.kubernetes.io/part-of: infrastructure
spec:
  project: kailash
  
  source:
    repoURL: https://kubernetes-sigs.github.io/metrics-server/
    targetRevision: 3.11.0
    chart: metrics-server
    helm:
      values: |
        replicas: 2
        metrics:
          enabled: true
        serviceMonitor:
          enabled: true
          additionalLabels:
            prometheus: kailash
  
  destination:
    server: https://kubernetes.default.svc
    namespace: kube-system
  
  syncPolicy:
    automated:
      prune: true
      selfHeal: true