apiVersion: v1
kind: ConfigMap
metadata:
  name: user-management-config
  namespace: kailash-user-management
  labels:
    app: user-management
    component: config
data:
  # Application Configuration
  ENVIRONMENT: "production"
  LOG_LEVEL: "INFO"
  DEBUG: "false"
  
  # Database Configuration
  DATABASE_HOST: "postgresql-service"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "user_management"
  
  # Redis Configuration
  REDIS_HOST: "redis-service"
  REDIS_PORT: "6379"
  REDIS_DB: "0"
  
  # API Configuration
  API_HOST: "0.0.0.0"
  API_PORT: "8000"
  WEBSOCKET_PORT: "8001"
  
  # Security Configuration
  SESSION_TIMEOUT: "3600"
  MFA_ENABLED: "true"
  PASSWORD_POLICY_ENABLED: "true"
  
  # Monitoring Configuration
  METRICS_ENABLED: "true"
  MONITORING_PORT: "9090"
  HEALTH_CHECK_PATH: "/health"
  
  # Backup Configuration
  BACKUP_ENABLED: "true"
  BACKUP_SCHEDULE: "0 2 * * *"  # Daily at 2 AM
  BACKUP_RETENTION_DAYS: "30"
  
  # Compliance Configuration
  GDPR_ENABLED: "true"
  AUDIT_LOGGING: "true"
  DATA_RETENTION_DAYS: "2555"  # 7 years
  
  # Feature Flags
  REAL_TIME_NOTIFICATIONS: "true"
  AI_CHAT_ENABLED: "true"
  ANALYTICS_ENABLED: "true"
  
  # Performance Configuration
  MAX_CONCURRENT_USERS: "500"
  API_RATE_LIMIT: "1000"
  RESPONSE_TIMEOUT: "30"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: user-management-nginx-config
  namespace: kailash-user-management
  labels:
    app: user-management
    component: nginx
data:
  nginx.conf: |
    upstream app_backend {
        server user-management-service:8000;
    }
    
    upstream websocket_backend {
        server user-management-service:8001;
    }
    
    server {
        listen 80;
        server_name _;
        
        # API endpoints
        location /api/ {
            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # WebSocket endpoints
        location /ws/ {
            proxy_pass http://websocket_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 7d;
            proxy_send_timeout 7d;
            proxy_read_timeout 7d;
        }
        
        # Health check
        location /health {
            proxy_pass http://app_backend/health;
            access_log off;
        }
        
        # Metrics
        location /metrics {
            proxy_pass http://app_backend/metrics;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
    }