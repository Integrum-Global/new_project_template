# Kailash Python SDK - Test Infrastructure
# LOCKED-IN CONFIGURATION - DO NOT CHANGE PORTS
# PostgreSQL: 5434, Redis: 6380, Ollama: 11435, MySQL: 3307

services:
  # PostgreSQL with pgvector - Port 5434 (LOCKED-IN)
  postgres:
    image: pgvector/pgvector:pg15
    container_name: kailash_sdk_test_postgres
    environment:
      POSTGRES_DB: kailash_test
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=en_US.UTF-8"
    ports:
      - "5434:5432"
    volumes:
      - kailash_sdk_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test_user -d kailash_test"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # Redis - Port 6380 (LOCKED-IN)
  redis:
    image: redis:7-alpine
    container_name: kailash_sdk_test_redis
    ports:
      - "6380:6379"
    command: >
      redis-server
      --maxmemory 1gb
      --maxmemory-policy allkeys-lru
      --save ""
      --appendonly no
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Ollama for AI testing - Port 11435 (LOCKED-IN)
  ollama:
    image: ollama/ollama:latest
    container_name: kailash_sdk_test_ollama
    ports:
      - "11435:11434"
    volumes:
      - kailash_sdk_ollama_models:/root/.ollama
    environment:
      - OLLAMA_MODELS=/root/.ollama/models
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:11434/api/tags || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  # MySQL - Port 3307 (LOCKED-IN)
  mysql:
    image: mysql:8.0
    container_name: kailash_sdk_test_mysql
    environment:
      MYSQL_ROOT_PASSWORD: test_password
      MYSQL_DATABASE: kailash_test
      MYSQL_USER: kailash_test
      MYSQL_PASSWORD: test_password
    ports:
      - "3307:3306"
    volumes:
      - kailash_sdk_mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # MongoDB - Port 27017 (LOCKED-IN)
  mongodb:
    image: mongo:7
    container_name: kailash_sdk_test_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: kailash
      MONGO_INITDB_ROOT_PASSWORD: kailash123
      MONGO_INITDB_DATABASE: kailash_test
    ports:
      - "27017:27017"
    volumes:
      - kailash_sdk_mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Mock API Server - Port 8888 (LOCKED-IN)
  mock-api:
    build:
      context: ../../docker/mock-api-server
      dockerfile: Dockerfile
    container_name: kailash_sdk_test_mock_api
    ports:
      - "8888:8888"
    environment:
      - PORT=8888
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

volumes:
  kailash_sdk_postgres_data:
  kailash_sdk_mysql_data:
  kailash_sdk_mongodb_data:
  kailash_sdk_ollama_models:

networks:
  default:
    name: kailash_sdk_test_network
