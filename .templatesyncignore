# Template Sync Strategy: Sync-If-Missing for Downstream Repos
# 
# ALWAYS REPLACE (keep current from template):
# - sdk-users/ (latest SDK guidance)
# - CLAUDE.md (latest development patterns)
#
# SYNC-IF-MISSING (preserve client customizations):
# - apps/ structure (except _template)
# - solutions/ implementations
# - All project management folders

# =============================================================================
# CLIENT-SPECIFIC CONTENT (Never Sync - Preserve Always)
# =============================================================================

# Client app implementations (preserve existing apps)
# Note: Example apps (qa_agentic_testing, studio, user_management) are NOT listed here
# because they SHOULD be synced from template
apps/*/adr/
apps/*/todos/
apps/*/mistakes/
apps/*/workflows/
apps/*/core/
apps/*/api/
apps/*/cli/
apps/*/tests/
apps/*/data/

# Client solutions implementations (preserve existing solutions)
solutions/adr/
solutions/todos/
solutions/mistakes/
solutions/tenant_orchestration/
solutions/shared_services/
solutions/data_integration/
solutions/monitoring/

# Client-specific infrastructure
infrastructure/local/
infrastructure/client-specific/

# Template-specific GitHub workflows (don't sync to client repos)
.github/workflows/sync-to-downstream.yml

# Note: Essential workflows ARE synced via sync-from-template.yml:
# - unified-ci.yml (Primary CI/CD)
# - security-report.yml (Security scanning)
# - sync-from-template.yml (Template updates)
# - template-sync-check.yml (Sync validation)
# - template-init.yml (Repository setup)
# - template-cleanup.yml (Post-creation cleanup)
# - README.md (Workflow documentation)

# Environment and configuration files
.env*
*.env
.local
.private

# Client data and outputs
data/inputs/
data/outputs/
data/client-specific/

# =============================================================================
# DEVELOPMENT ARTIFACTS (Never Sync)
# =============================================================================

# Build artifacts
dist/
build/
*.egg-info/
__pycache__/
*.pyc
*.pyo
*.pyd

# Testing artifacts
.pytest_cache/
.coverage
htmlcov/
.tox/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~

# OS files
.DS_Store
Thumbs.db

# Python virtual environments
venv/
.venv/
env/
.env/

# Node modules (if any frontend work)
node_modules/
npm-debug.log*

# Documentation builds
docs/_build/
docs/_static/
docs/_templates/

# =============================================================================
# TEMPLATE STRUCTURE THAT SYNCS-IF-MISSING
# =============================================================================
# These will be added to downstream repos if missing, but not overwritten:
# - apps/_template/ (app template structure)
# - apps/README.md (app development guide) 
# - apps/APP_DEVELOPMENT_GUIDE.md (comprehensive guide)
# - solutions/README.md (solutions coordination guide)
# - infrastructure/README.md (infrastructure guide)
# - Main README.md (if client hasn't customized)

# =============================================================================
# ALWAYS REPLACE (Latest from Template)
# =============================================================================
# These are explicitly NOT in this ignore file, so they always sync:
# - sdk-users/ (latest SDK documentation)
# - CLAUDE.md (latest development patterns)

# Backup files
*.bak
*.backup

# Temporary files
tmp/
temp/
*.tmp

# Logs
*.log
logs/

# Database files (client-specific)
*.db
*.sqlite
*.sqlite3

# Credentials and secrets
*.key
*.pem
secrets/
.secrets/