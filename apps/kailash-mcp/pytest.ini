[tool:pytest]
# MCP Forge Test Configuration

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Markers - automatically applied based on file location
markers =
    unit: Unit tests (Tier 1) - fast, isolated, mocking allowed
    integration: Integration tests (Tier 2) - real Docker services, NO MOCKING
    e2e: End-to-end tests (Tier 3) - complete workflows, real infrastructure
    requires_docker: Test requires Docker services
    requires_postgres: Test requires PostgreSQL service
    requires_redis: Test requires Redis service
    requires_ollama: Test requires Ollama service
    requires_mcp_server: Test requires real MCP server
    slow: Slow-running tests (>10 seconds)

# Async support
asyncio_mode = auto

# Output
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --color=yes
    --durations=10
    --showlocals

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ResourceWarning

# Minimum version
minversion = 7.0

# Coverage (when using --cov flag)
[tool:coverage:run]
source = mcp_forge
omit =
    */tests/*
    */conftest.py
    */test_*.py

[tool:coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
