# MCP Server Configuration
# This file defines initial MCP servers to be loaded on startup

servers:
  # Filesystem operations server
  - name: filesystem
    transport: stdio
    command: npx
    args:
      - "@modelcontextprotocol/server-filesystem"
      - "/data"
    auto_start: true
    tags:
      - default
      - filesystem
      - storage
    description: "Filesystem operations MCP server"
    environment:
      LOG_LEVEL: info

  # SQLite database server
  - name: sqlite
    transport: stdio
    command: mcp-server-sqlite
    args:
      - "--db-path"
      - "/data/database.db"
    auto_start: false
    tags:
      - database
      - sql
    description: "SQLite database MCP server"

  # Python code execution server
  - name: python-executor
    transport: stdio
    command: python
    args:
      - "-m"
      - "mcp_python_server"
    auto_start: false
    tags:
      - code
      - python
      - execution
    description: "Python code execution MCP server"
    environment:
      PYTHON_MCP_SAFE_MODE: "true"
      PYTHON_MCP_TIMEOUT: "30"

  # API gateway server
  - name: api-gateway
    transport: http
    url: http://localhost:8081
    headers:
      X-API-Key: "${MCP_API_KEY}"
    auto_start: false
    tags:
      - api
      - http
      - gateway
    description: "HTTP API gateway MCP server"
    health_check:
      endpoint: /health
      interval: 30
      timeout: 5

  # GitHub integration server
  - name: github
    transport: stdio
    command: mcp-server-github
    args:
      - "--token"
      - "${GITHUB_TOKEN}"
    auto_start: false
    tags:
      - github
      - vcs
      - integration
    description: "GitHub integration MCP server"

  # Slack integration server
  - name: slack
    transport: http
    url: https://mcp-slack.example.com
    auth:
      type: oauth2
      client_id: "${SLACK_CLIENT_ID}"
      client_secret: "${SLACK_CLIENT_SECRET}"
    auto_start: false
    tags:
      - slack
      - chat
      - integration
    description: "Slack integration MCP server"

# Server groups for easy management
groups:
  default:
    - filesystem
    - sqlite

  integrations:
    - github
    - slack

  development:
    - python-executor
    - api-gateway

# Global settings
settings:
  # Auto-start servers in these groups
  auto_start_groups:
    - default

  # Health check settings
  health_check:
    enabled: true
    interval: 60
    timeout: 10

  # Discovery settings
  discovery:
    enabled: true
    interval: 300
    cache_ttl: 3600

  # Security settings
  security:
    allowed_commands:
      - npx
      - mcp-server-sqlite
      - mcp-server-github
      - python

    blocked_commands:
      - rm
      - dd
      - format

    sandbox_mode: true
