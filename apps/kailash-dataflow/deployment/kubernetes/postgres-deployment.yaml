apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: dataflow
data:
  POSTGRES_DB: "dataflow_db"
  POSTGRES_USER: "dataflow"
---
apiVersion: v1
kind: Secret
metadata:
  name: postgres-secret
  namespace: dataflow
type: Opaque
stringData:
  POSTGRES_PASSWORD: "dataflow123"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: dataflow
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: fast-ssd
  resources:
    requests:
      storage: 20Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: dataflow
spec:
  serviceName: postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
          name: postgres
        envFrom:
        - configMapRef:
            name: postgres-config
        - secretRef:
            name: postgres-secret
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
          subPath: postgres
        - name: init-scripts
          mountPath: /docker-entrypoint-initdb.d
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - pg_isready -U dataflow -d dataflow_db
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - pg_isready -U dataflow -d dataflow_db
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      - name: init-scripts
        configMap:
          name: postgres-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: dataflow
spec:
  selector:
    app: postgres
  ports:
  - protocol: TCP
    port: 5432
    targetPort: 5432
  type: ClusterIP
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-scripts
  namespace: dataflow
data:
  init.sql: |
    -- Create extensions
    CREATE EXTENSION IF NOT EXISTS "uuid-ossp";
    CREATE EXTENSION IF NOT EXISTS "pg_stat_statements";
    CREATE EXTENSION IF NOT EXISTS "pg_trgm";

    -- Create schemas
    CREATE SCHEMA IF NOT EXISTS dataflow;
    CREATE SCHEMA IF NOT EXISTS audit;
    CREATE SCHEMA IF NOT EXISTS monitoring;

    -- Grant permissions
    GRANT ALL ON SCHEMA dataflow TO dataflow;
    GRANT ALL ON SCHEMA audit TO dataflow;
    GRANT ALL ON SCHEMA monitoring TO dataflow;

    -- Set default search path
    ALTER USER dataflow SET search_path TO dataflow, public;

    -- Create audit table
    CREATE TABLE IF NOT EXISTS audit.audit_logs (
        id SERIAL PRIMARY KEY,
        action VARCHAR(100) NOT NULL,
        resource_type VARCHAR(100) NOT NULL,
        resource_id VARCHAR(100),
        actor_id INTEGER,
        tenant_id VARCHAR(100),
        metadata JSONB,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- Create indexes
    CREATE INDEX idx_audit_created_at ON audit.audit_logs(created_at);
    CREATE INDEX idx_audit_resource ON audit.audit_logs(resource_type, resource_id);
    CREATE INDEX idx_audit_actor ON audit.audit_logs(actor_id);
    CREATE INDEX idx_audit_tenant ON audit.audit_logs(tenant_id);
