[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "kailash-ai-registry"
version = "1.0.0"
description = "AI Registry Enterprise Application with RAG capabilities using Kailash SDK"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "Kailash Team", email = "team@kailash.io"}
]
maintainers = [
    {name = "Kailash Team", email = "team@kailash.io"}
]
keywords = [
    "ai", "registry", "rag", "mcp", "kailash",
    "enterprise", "document-processing", "knowledge-base"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
    "kailash>=0.3.1",
    "pyyaml>=6.0",
    "aiofiles>=23.0",
    "httpx>=0.24.0",
    "pydantic>=2.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "tiktoken>=0.5.0",
    "python-dateutil>=2.8.0",
    "rich>=13.0.0",
    "typer>=0.9.0",
    "uvicorn[standard]>=0.23.0",
    "fastapi>=0.100.0",
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    "psycopg2-binary>=2.9.0",
    "redis>=5.0.0",
    "prometheus-client>=0.18.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0",
    "sphinx-autodoc-typehints>=1.24.0",
    "myst-parser>=2.0.0",
]
enterprise = [
    "ldap3>=2.9.0",
    "pyjwt>=2.8.0",
    "cryptography>=41.0.0",
    "boto3>=1.28.0",
    "azure-storage-blob>=12.17.0",
    "google-cloud-storage>=2.10.0",
]

[project.urls]
Homepage = "https://github.com/kailash-io/ai-registry"
Documentation = "https://ai-registry.kailash.io/docs"
Repository = "https://github.com/kailash-io/ai-registry"
Issues = "https://github.com/kailash-io/ai-registry/issues"

[project.scripts]
ai-registry = "ai_registry.cli:main"
ai-registry-server = "ai_registry.mcp_server:main"
ai-registry-migrate = "ai_registry.deployment.migrate:main"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
where = ["."]
include = ["ai_registry*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
ai_registry = [
    "data/*.yaml",
    "data/*.json",
    "data/*.pdf",
    "deployment/**/*.sql",
    "deployment/**/*.yml",
    "deployment/**/*.yaml",
]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | node_modules
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = true
follow_imports = "silent"
no_implicit_optional = true
strict_optional = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--ignore=docs",
    "--ignore=build",
    "--ignore=dist",
    "--doctest-modules",
    "--cov=ai_registry",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["."]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "e2e: marks tests as end-to-end tests",
]

[tool.coverage.run]
source = ["ai_registry"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if False:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
